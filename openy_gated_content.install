<?php

/**
 * @file
 * Installation file for Open Y Virtual YMCA.
 */

use Drupal\Core\Entity\ContentEntityType;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\field\Entity\FieldConfig;
use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Virtual Y install.
 */
function openy_gated_content_install() {
  $field_permission = BaseFieldDefinition::create('string')
    ->setLabel(t('Virtual Y Access Group'))
    ->setSetting('max_length', 255)
    ->setDefaultValue('virtual_y,virtual_y_premium')
    ->setRequired(FALSE)
    ->setRevisionable(FALSE)
    ->setTranslatable(FALSE)
    ->setDisplayConfigurable('view', FALSE)
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayOptions('form', [
      'type' => 'virtual_y_roles_select',
      'settings' => [
        'size' => '255',
      ],
    ]);

  $definition_manager = \Drupal::entityDefinitionUpdateManager();
  $definition_manager->installFieldStorageDefinition('field_vy_permission', 'node', 'openy_gated_content', $field_permission);
  $definition_manager->installFieldStorageDefinition('field_vy_permission', 'eventseries', 'openy_gated_content', $field_permission);
  $definition_manager->installFieldStorageDefinition('field_vy_permission', 'eventinstance', 'openy_gated_content', $field_permission);
}

/**
 * Add virtual_ymca_editor user role.
 */
function openy_gated_content_update_8001() {
  $config_dir = drupal_get_path('module', 'openy_gc_storage');
  $config_dir .= '/config/install/';
  // Import new configuration.
  $config_importer = \Drupal::service('openy_upgrade_tool.importer');
  $config_importer->setDirectory($config_dir);
  $config_importer->importConfigs([
    'system.action.user_add_role_action.virtual_ymca_editor',
    'system.action.user_remove_role_action.virtual_ymca_editor',
    'user.role.virtual_ymca_editor',
  ]);
}

/**
 * Add components settings to openy_gated_content.settings.
 */
function openy_gated_content_update_8002() {
  $config_importer = \Drupal::service('openy_upgrade_tool.param_updater');
  $config = drupal_get_path('module', 'openy_gated_content');
  $config .= '/config/install/';
  $config .= 'openy_gated_content.settings.yml';
  $config_importer->update(
    $config,
    'openy_gated_content.settings',
    'components'
  );
}

/**
 * Add pager limit setting to openy_gated_content.settings.
 */
function openy_gated_content_update_8003() {
  $config_importer = \Drupal::service('openy_upgrade_tool.param_updater');
  $config = drupal_get_path('module', 'openy_gated_content');
  $config .= '/config/install/';
  $config .= 'openy_gated_content.settings.yml';
  $config_importer->update(
    $config,
    'openy_gated_content.settings',
    'pager_limit'
  );
}

/**
 * Add new Virtual YMCA user roles.
 */
function openy_gated_content_update_8004() {
  $config_dir = drupal_get_path('module', 'openy_gated_content');
  $config_dir .= '/config/install/';
  // Import new configuration.
  $config_importer = \Drupal::service('openy_upgrade_tool.importer');
  $config_importer->setDirectory($config_dir);
  $config_importer->importConfigs([
    'user.role.virtual_y',
    'user.role.virtual_y_premium',
    'user.role.virtual_y_trial',
  ]);
}

/**
 * Remove field_link_to_gated_content_app completely.
 */
function openy_gated_content_update_8005() {
  FieldConfig::loadByName('paragraph', 'gated_content_login', 'field_link_to_gated_content_app')->delete();
  FieldStorageConfig::loadByName('paragraph', 'field_link_to_gated_content_app')->delete();
}

/**
 * Install permissions field.
 */
function openy_gated_content_update_8006() {
  $field_permission = BaseFieldDefinition::create('string')
    ->setLabel(t('Virtual Y Access Group'))
    ->setSetting('max_length', 255)
    ->setDefaultValue('virtual_y,virtual_y_premium')
    ->setRequired(FALSE)
    ->setRevisionable(FALSE)
    ->setTranslatable(FALSE)
    ->setDisplayConfigurable('view', FALSE)
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayOptions('form', [
      'type' => 'virtual_y_roles_select',
      'settings' => [
        'size' => '255',
      ],
    ]);

  $definition_manager = \Drupal::entityDefinitionUpdateManager();
  $definition_manager->installFieldStorageDefinition('field_vy_permission', 'node', 'openy_gated_content', $field_permission);
  $definition_manager->installFieldStorageDefinition('field_vy_permission', 'eventseries', 'openy_gated_content', $field_permission);
  $definition_manager->installFieldStorageDefinition('field_vy_permission', 'eventinstance', 'openy_gated_content', $field_permission);
}

/**
 * Add virtual y permissions settings.
 */
function openy_gated_content_update_8007() {
  $config_dir = drupal_get_path('module', 'openy_gated_content') . '/config/install/';
  // Update multiple configurations.
  $configs = [
    'openy_gated_content.settings' => [
      'permissions_entities',
    ],
  ];
  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Update virtual_ymca_editor user role.
 */
function openy_gated_content_update_8008() {
  $config_dir = drupal_get_path('module', 'openy_gated_content');
  $config_dir .= '/config/install/';
  $config_importer = \Drupal::service('openy_upgrade_tool.importer');
  $config_importer->setDirectory($config_dir);
  $config_importer->importConfigs([
    'user.role.virtual_ymca_editor',
  ]);
}

/**
 * Add virtual y logout url.
 */
function openy_gated_content_update_8009() {
  $config_dir = drupal_get_path('module', 'openy_gated_content') . '/config/install/';
  $configs = [
    'openy_gated_content.settings' => [
      'virtual_y_logout_url',
    ],
  ];
  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Install new fields for gated_content paragraph.
 */
function openy_gated_content_update_8010() {
  $config_dir = drupal_get_path('module', 'openy_gated_content');
  $config_dir .= '/config/install/';
  $config_importer = \Drupal::service('openy_upgrade_tool.importer');
  $config_importer->setDirectory($config_dir);
  $config_importer->importConfigs([
    'core.entity_form_display.paragraph.gated_content.default',
    'core.entity_view_display.paragraph.gated_content.default',
    'field.field.paragraph.gated_content.field_prgf_description',
    'field.field.paragraph.gated_content.field_prgf_image',
    'field.field.paragraph.gated_content.field_prgf_link',
    'field.field.paragraph.gated_content.field_prgf_title',
    'image.style.virtual_y_paragraph_headline',
  ]);
}

/**
 * Add top menu settings to openy_gated_content.settings.
 */
function openy_gated_content_update_8011() {
  $config_importer = \Drupal::service('openy_upgrade_tool.param_updater');
  $config = drupal_get_path('module', 'openy_gated_content');
  $config .= '/config/install/';
  $config .= 'openy_gated_content.settings.yml';
  $config_importer->update(
    $config,
    'openy_gated_content.settings',
    'top_menu'
  );
}

/**
 * Install VyFavoriteItem Entity Type.
 */
function openy_gated_content_update_8012() {
  \Drupal::entityDefinitionUpdateManager()
    ->installEntityType(new ContentEntityType([
      'id' => 'vy_favorite_item',
      'label' => new TranslatableMarkup('VY Favorite Item'),
      'base_table' => 'vy_favorite_item',
      'translatable' => FALSE,
      'admin_permission' => 'administer gated content favorite items',
      'handlers' => [
        'storage_schema' => 'Drupal\openy_gated_content\VyFavoriteItemStorageSchema',
      ],
      'entity_keys' => [
        'id' => 'id',
        'ref_entity_type' => 'ref_entity_type',
        'ref_entity_bundle' => 'ref_entity_bundle',
        'ref_entity_id' => 'ref_entity_id',
        'owner' => 'uid',
        'created' => 'created',
      ],
    ]));
}
